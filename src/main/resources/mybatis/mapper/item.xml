<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.hdd.hdeco.mapper.ItemMapper">
   
  
  <!-- 상품 갯수 count  -->
   <select id="getItemCount" resultType="int">
      SELECT COUNT(*)
       FROM ITEM_T
   </select>
   
   <!-- DB에서 상품 목록 읽어오기-->
   <select id="getItemList" parameterType="Map" resultType="ItemDTO">
       SELECT ITEM_NO, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG, ITEM_DETAIL_IMG, ITEM_STOCK, ITEM_WRITED_AT
         FROM ITEM_T
         <where>
              <if test="column != '' and query != ''">
                  ${column} LIKE CONCAT('%', UPPER(#{query}),'%') OR ${column} LIKE CONCAT('%', LOWER(#{query}) , '%')
              </if>
          </where> 
        ORDER BY ITEM_WRITED_AT DESC
        LIMIT #{begin}, #{recordPerPage}
   </select>
   
   <!-- itemNo를 이용하여 아이템 정보 읽어오기 -->
   <select id="getItemByNo" parameterType="int" resultType="ItemDTO">
      SELECT ITEM_NO, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG, ITEM_DETAIL_IMG, ITEM_STOCK, ITEM_WRITED_AT
        FROM ITEM_T
       WHERE ITEM_NO = #{itemNo}
    </select>
   
   <!-- userNo를 이용하여 카트 정보 읽어오기 -->
  <select id="getCartByUserNo" parameterType="int" resultType="CartDTO">
      SELECT CART_NO
        FROM CART_T
       WHERE USER_NO = #{userNo}
   </select>
   
   <select id="getOrderByCartDetailNo" parameterType="int" resultType="CartDetailDTO">
      SELECT ORDER_NO
        FROM CART_DETAIL_T
       WHERE CART_DETAIL_NO = #{cartDetailNo}
   </select>
   
   <insert id="madeCart" parameterType="int">
      INSERT INTO CART (
          MADE_AT
        , USER_NO
      ) VALUES (
          NOW()
        , #{userNo}
      )
   </insert>
   

   <select id="confirmItemInCart" parameterType="Map" resultType="CartDetailDTO">
      SELECT CART_DETAIL_NO
        FROM CART_DETAIL_T
       WHERE CART_NO = #{itemNo} AND ITEM_NO = #{itemNo}
   </select>
   
   <select id="confirmUsersInOrder" parameterType="Map" resultType="ItemOrderDTO">
      SELECT ORDER_NO
        FROM USER_T
       WHERE USER_NO = #{userNo} AND CART_NO = #{cartNo}
   </select>
   
 <!--   <insert id="addCartDetail" parameterType="Map">
      INSERT INTO CART_DETAIL (
          COUNT
        , CART_NO
        , ITEM_NO
      ) VALUES (
         #{count}
        , #{cartNo}
        , #{itemNo}
      )
   </insert>
   

   <update id="modifyCartDetail" parameterType="Map">
      UPDATE CART_DETAIL_T
         SET COUNT = COUNT + #{count}
       WHERE ITEM_NO = #{itemNo}
   </update>


   <select id="getCartDetailNoByUserNo" parameterType="int" resultType="CartDetailDTO">
   SELECT CD.CART_DETAIL_NO
       FROM CART CT INNER JOIN CART_DETAIL CD
       ON CT.CART_NO = CD.CART_NO INNER JOIN CD C
       ON C.CD_NO = CD.CD_NO
    WHERE USER_NO = #{userNo}
   </select>
    
    <select id="getCartDetailList" parameterType="int" resultMap="CartDetailMap">
   SELECT U.NAME, CD.CART_DETAIL_NO, CD.COUNT, CD.CART_NO, CD.CD_NO, CT.CART_NO, CT.MADE_AT, C.CD_NO, C.TITLE, C.SINGER, C.MAIN_IMG, C.PRICE, C.STOCK, C.WRITED_AT  
      FROM ORDER_TBL O RIGHT JOIN CD C 
     ON O.CD_NO = C.CD_NO RIGHT JOIN CART_DETAIL CD
     ON C.CD_NO = CD.CD_NO RIGHT JOIN CART CT
     ON CD.CART_NO = CT.CART_NO RIGHT JOIN USERS U
     ON CT.USER_NO = U.USER_NO
     WHERE CT.CART_NO = #{cartNo}
    </select>
   
   
   
   
   <insert id="addOrderList" parameterType="Map">
      INSERT INTO ORDER_TBL (
         TOTAL
        , EMAIL
        , PHONENO
        , POSTCODE
        , ROAD_ADDRESS
        , JIBUN_ADDRESS
        , DETAIL_ADDRESS
        , NAME
        , COUNT
        , ORDER_AT
        , CART_NO
        , CD_NO
      ) VALUES (
         #{total}
        , #{email}
        , #{phoneNo}
        , #{postcode}
        , #{roadAddress}
        , #{jibunAddress}
        , #{detailAddress}
        , #{name}
        , #{count}
        , NOW()
        , #{cartNo}
        , #{cdNo}
      )
   </insert>
  
   
   
   <select id="getOrderNoByUserNo" parameterType="int" resultType="OrderDTO">
    SELECT O.ORDER_NO
     FROM ORDER_T O RIGHT JOIN USER U
     ON USER_NO = USER_NO
     WHERE USER_NO = #{userNo}
   </select>
   
   <select id="fastGetOrderList" parameterType="" resultType="">
    SELECT CD.CART_DETAIL_NO, CD.COUNT, CT.CART_NO, C.CD_NO, CT.MADE_AT, C.CD_NO, C.TITLE, C.SINGER, C.MAIN_IMG, C.PRICE
     FROM ORDER_TBL O RIGHT JOIN CD C 
     ON O.CD_NO = C.CD_NO RIGHT JOIN CART_DETAIL CD
     ON C.CD_NO = CD.CD_NO RIGHT JOIN CART CT
     ON CD.CART_NO = CT.CART_NO RIGHT JOIN USERS U
     ON CT.USER_NO = U.USER_NO
     WHERE U.USER_NO = #{userNo}
   </select>   
   
   
   
   <select id="getOrderList" parameterType="int" resultMap="OrderMap">
   SELECT C.MAIN_IMG, O.ORDER_NO, O.EMAIL, O.NAME
   FROM ORDER_TBL O INNER JOIN CD C 
     ON O.CD_NO = C.CD_NO INNER JOIN CART_DETAIL CD
     ON C.CD_NO = CD.CD_NO INNER JOIN CART CT
     ON CD.CART_NO = CT.CART_NO INNER JOIN USERS U
     ON CT.USER_NO = U.USER_NO
    WHERE U.USER_NO = #{userNo}
   </select>  
   
   <delete id="deleteCart" parameterType="CartDTO">
   DELETE
     FROM CART
    WHERE CART_NO = #{cartNo}   
   </delete>
   
    
   <insert id="addOrderList" parameterType="OrderDTO">
      INSERT INTO ORDER_TBL (
         TOTAL
        , EMAIL
        , PHONENO
        , POSTCODE
        , ROAD_ADDRESS
        , JIBUN_ADDRESS
        , DETAIL_ADDRESS
        , NAME
        , COUNT
        , ORDER_AT
        , CART_NO
        , CD_NO
      ) VALUES (
         #{total}
        , #{email}
        , #{phoneNo}
        , #{postcode}
        , #{roadAddress}
        , #{jibunAddress}
        , #{detailAddress}
        , #{name}
        , #{count}
        , NOW()
        , #{CartDTO.cartNo}
        , #{CdDTO.cdNo}
      )
   </insert> -->

</mapper>