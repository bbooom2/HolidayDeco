<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.hdd.hdeco.mapper.ItemOrderMapper">

<insert id="insertOrder" parameterType="ItemOrderDTO">
  INSERT INTO ITEM_ORDER_T (
    ITEM_ORDER_NO,
    USER_NO,
    ORDER_DATE,
    NAME,
    MOBILE,
    POSTCODE,
    ROAD_ADDRESS,
    DETAIL_ADDRESS,
    ORDER_TOTAL,
    PAY_METHOD,
    IMP_UID
) VALUES (
    #{itemOrderNo},
    #{userNo},
    NOW(),
    #{name},
    #{mobile},
    #{postcode},
    #{roadAddress},
    #{detailAddress},
    #{orderTotal},
    #{payMethod},
    #{imp_uid}
);
</insert>

  <select id="selectUserOrder" parameterType="int" resultType="ItemOrderDTO">
    SELECT ITEM_ORDER_NO, USER_NO, ORDER_DATE, NAME, MOBILE, POSTCODE, ROAD_ADDRESS, DETAIL_ADDRESS ,ORDER_TOTAL, PAY_METHOD, IMP_UID
      FROM (SELECT ITEM_ORDER_NO, USER_NO, ORDER_DATE, NAME, MOBILE, POSTCODE, ROAD_ADDRESS, DETAIL_ADDRESS, ORDER_TOTAL, PAY_METHOD, IMP_UID
              FROM ITEM_ORDER_T
             WHERE USER_NO = #{userNo} 
            ORDER BY ITEM_ORDER_NO DESC
              LIMIT 1) AS A
  </select>

   <!-- 주문 상세 정보 -->
  <insert id="insertOrderDetail" parameterType="OrderDetailDTO">
   INSERT INTO ORDER_DETAIL_T (USER_NO, ITEM_ORDER_NO, ITEM_NO, QUANTITY, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG)
    SELECT USER_NO, #{itemOrderNo},ITEM_NO, QUANTITY, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG
    FROM CART_T
  </insert> 

  
  <!-- 특정 사용자의 주문 목록 -->
  <select id="orderList" resultType="ItemOrderDTO">
    SELECT ITEM_ORDER_NO, USER_NO, ORDER_DATE, NAME, MOBILE, POSTCODE, ROAD_ADDRESS, DETAIL_ADDRESS, ORDER_TOTAL, PAY_METHOD, IMP_UID, DELIVERY
    FROM ITEM_ORDER_T
    WHERE USER_NO = #{userNo}
    ORDER BY ORDER_DATE DESC
  </select>

  <!-- 특정 주문 목록  -->
	<select id="orderView" resultType="OrderListDTO">
	  SELECT A.ITEM_ORDER_NO, A.USER_NO, A.ORDER_DATE, A.NAME, MOBILE, A.POSTCODE, A.ROAD_ADDRESS, A.DETAIL_ADDRESS, A.ORDER_TOTAL, A.PAY_METHOD, A.IMP_UID, A.DELIVERY,
	    B.ITEM_NO, B.QUANTITY, B.ITEM_TITLE, B.ITEM_PRICE, B.ITEM_MAIN_IMG
	  FROM ITEM_ORDER_T A 
	    INNER JOIN ORDER_DETAIL_T B
	    ON A.ITEM_ORDER_NO = B.ITEM_ORDER_NO
	  WHERE A.USER_NO = #{userNo}
	    AND A.ITEM_ORDER_NO = #{itemOrderNo}
	</select>

  <select id="getUserByUserNo" parameterType="int" resultType="UserDTO">
    SELECT USER_NO, NAME, EMAIL, MOBILE
    FROM USER_T
    WHERE USER_NO = #{userNo}
  </select>
  
  <select id="getItemByNo" parameterType="int" resultType="CartDTO">
    SELECT CART_NO, ITEM_NO, USER_NO, QUANTITY, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG
      FROM CART_T
     WHERE ITEM_NO = #{itemNo}
  </select>
  
  <select id="getFromItem" parameterType="int" resultType="ItemDTO">
    SELECT *
      FROM ITEM_T
     WHERE ITEM_NO = #{itemNo}
  </select>
  
  <!-- 카트 비우기 -->
  <delete id="deleteCartByUserNo" parameterType="int">
    DELETE FROM CART_T
     WHERE USER_NO = #{userNo}
  </delete>
  
  <!-- 결제취소 -->
  <delete id="deleteOrder" parameterType="String">
    DELETE 
      FROM ITEM_ORDER_T
    WHERE ITEM_ORDER_NO = #{itemOrderNo}
  </delete>
  
  <update id="orderCancle" parameterType="map">
    UPDATE ITEM_ORDER_T
    SET DELIVERY = '주문 취소'
    WHERE ITEM_ORDER_NO = #{itemOrderNo}
</update>




  <!--          -->
  <!-- 바로결제 -->
  <!--          -->
  <!--          -->
  
<!-- 바로주문 아이템 주문 상세 정보 -->
  <insert id="insertGoBuyOrderDetail" parameterType="OrderDetailDTO">
    INSERT INTO ORDER_DETAIL_T (
    USER_NO, 
    ITEM_ORDER_NO, 
    ITEM_NO, 
    QUANTITY, 
    ITEM_TITLE, 
    ITEM_PRICE, 
    ITEM_MAIN_IMG
    ) 
    SELECT USER_NO, #{itemOrderNo},ITEM_NO, QUANTITY, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG
      FROM GO_BUY_T
  </insert>
  
  <delete id="deleteGoBuyItemNo" parameterType="int">
    DELETE FROM GO_BUY_T
     WHERE USER_NO = #{userNo}
  </delete>
  
  
</mapper>