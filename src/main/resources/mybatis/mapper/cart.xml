<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.hdd.hdeco.mapper.CartMapper">

  <select id="selectUserNobyId" parameterType="String" resultType="int">
    SELECT USER_NO
    FROM USER_T
    WHERE ID = #{id}
  </select>
  
  <select id="selectItembyNo" parameterType="int" resultType="cartDTO">
    SELECT ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG
    FROM ITEM_T
    WHERE ITEM_NO = #{itemNo}
  </select>
    
  <!-- 이미 장바구니에 담긴 상품인지 확인 -->
  <select id="selectAlreadyInCart" parameterType="CartDTO" resultType="CartDTO">
    SELECT CART_NO, USER_NO, ITEM_NO, QUANTITY, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG
      FROM CART_T
     WHERE USER_NO = #{userNo} AND ITEM_NO = #{itemNo}
  </select>
  
  <insert id="insertCart" parameterType="CartDTO">
    INSERT INTO CART_T (USER_NO, ITEM_NO, QUANTITY, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG)
        VALUES (#{userNo}, #{itemNo}, #{quantity}, #{itemTitle}, #{itemPrice}, #{itemMainImg})
  </insert>  
 
  <select id="selectCartList" parameterType="int" resultType="CartDTO">
    SELECT CART_NO, USER_NO, ITEM_NO, ITEM_TITLE, QUANTITY, ITEM_PRICE, (QUANTITY * ITEM_PRICE) AS CART_PRICE, ITEM_MAIN_IMG
      FROM CART_T
     WHERE USER_NO = #{userNo} 
  </select>
 
  <delete id="deleteByItemNo" parameterType="Map">
    DELETE FROM CART_T
     WHERE USER_NO = #{userNo} AND ITEM_NO = #{itemNo}
     
  </delete>
  
    
<!-- 장바구니 수정 -->
  <update id="updateCartQuantity" parameterType="Map">
    UPDATE CART_T
       SET QUANTITY =  #{quantity}
     WHERE ITEM_NO = #{itemNo}
  </update>

  
<!--  장바구니에 동일한 상품이 존재하면 수량 합산  -->
  <update id="updateCart" parameterType="Map">
    UPDATE CART_T
    SET QUANTITY= QUANTITY + #{quantity}
    WHERE ITEM_NO = #{itemNo}
  </update>
  
 <!-- 장바구니 전체 금액 : 장바구니에 담긴 상품과 수량 전체 합산, 장바구니가 비어있으면 0 -->
<select id="totalCartItemPrice" parameterType="int" resultType="int">
   SELECT COALESCE(SUM(I.ITEM_PRICE * C.QUANTITY), 0) AS CART_PRICE
		FROM CART_T C
		INNER JOIN ITEM_T I ON C.ITEM_NO = I.ITEM_NO
		WHERE C.USER_NO = #{userNo}
</select>



<!--                 -->
<!--                 -->
<!-- 바로구매 mapper -->
<!--                 -->
<!--                 -->


<!--GO_BUY_T에 담긴 itemList 보기-->
  <select id="selectGoBuyItemList" parameterType="int" resultType="CartDTO">
    SELECT CART_NO, USER_NO, ITEM_NO, ITEM_TITLE, QUANTITY, ITEM_PRICE, (QUANTITY * ITEM_PRICE) AS CART_PRICE, ITEM_MAIN_IMG
      FROM GO_BUY_T
     WHERE USER_NO = #{userNo}
  </select>
  
<!--GO_BUY_T에 아이템정보 넣기-->
  <insert id="insertGoBuyItem" parameterType="CartDTO">
    INSERT INTO GO_BUY_T 
    (
    USER_NO, 
    ITEM_NO, 
    QUANTITY, 
    ITEM_TITLE, 
    ITEM_PRICE, 
    ITEM_MAIN_IMG
    ) VALUES (
    #{userNo}, 
    #{itemNo}, 
    #{quantity}, 
    #{itemTitle}, 
    #{itemPrice}, 
    #{itemMainImg}
    )
  </insert>
  
<!-- 아이템 전체 금액 :GO_BUY_T에 담긴 상품과 수량 전체 합산, GO_BUY_T가 비어있으면 0 -->
  <select id="totalGoBuyItemPrice" parameterType="int" resultType="int">
    SELECT COALESCE(SUM(I.ITEM_PRICE * C.QUANTITY), 0) AS CART_PRICE
      FROM GO_BUY_T C
     INNER JOIN ITEM_T I ON C.ITEM_NO = I.ITEM_NO
     WHERE C.USER_NO = #{userNo}
  </select>



</mapper>