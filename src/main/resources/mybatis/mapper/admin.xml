<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 @Mapper를 지정한다. -->
<mapper namespace="com.hdd.hdeco.mapper.AdminMapper">


	<!-- 상품 개수 count -->
	<select id="getItemCount" resultType="int">
		SELECT COUNT(*)
		FROM ITEM_T
	</select>

	<!-- itemNo를 이용하여 아이템 정보 읽어오기 -->
	<select id="getItemByNo" parameterType="int"
		resultType="ItemDTO">
		SELECT ITEM_NO, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG, ITEM_DETAIL_IMG,
		ITEM_STOCK, ITEM_WRITED_AT
		FROM ITEM_T
		WHERE ITEM_NO = #{itemNo}
	</select>

	<!-- DB에서 상품 목록 읽어오기 -->
	<select id="getItemManageList" parameterType="Map"
		resultType="ItemDTO">
		SELECT ITEM_NO, ITEM_TITLE, ITEM_PRICE, ITEM_MAIN_IMG,
		ITEM_DETAIL_IMG, ITEM_STOCK, ITEM_WRITED_AT
		FROM ITEM_T
		<where>
			<if test="column != '' and query != ''">
				${column} LIKE CONCAT('%', UPPER(#{query}),'%') OR ${column} LIKE CONCAT('%',
				LOWER(#{query}) , '%')
			</if>
		</where>
		ORDER BY ITEM_WRITED_AT DESC
		LIMIT #{begin}, #{recordPerPage}
	</select>

	<!-- 상품 등록 -->
	<insert id="uploadItem" useGeneratedKeys="true"
		keyProperty="itemNo" parameterType="itemDTO">
		INSERT INTO ITEM_T (
		ITEM_TITLE
		, ITEM_PRICE
		, ITEM_STOCK
		, ITEM_MAIN_IMG
		, ITEM_DETAIL_IMG
		, ITEM_WRITED_AT
		) VALUES (
		#{itemTitle}
		, #{itemPrice}
		, #{itemStock}
		, #{itemMainImg}
		, #{itemDetailImg}
		, NOW()
		)
	</insert>

	<!-- 상품 삭제 -->
	<delete id="deleteItem" parameterType="int">
		DELETE
		FROM ITEM_T
		WHERE ITEM_NO = ${itemNo}
	</delete>

	<!-- 등록한 상품 수정 -->
	<update id="modifyItem" parameterType="itemDTO">
		UPDATE ITEM_T
		SET
		ITEM_TITLE = #{itemTitle}
		, ITEM_PRICE = #{itemPrice}
		, ITEM_STOCK =
		#{itemStock}
		, ITEM_MAIN_IMG = #{itemMainImg}
		, ITEM_DETAIL_IMG =
		#{itemDetailImg}
		WHERE ITEM_NO = #{itemNo}
	</update>

	<!-- 상품 검색 -->
	<select id="searchItem" parameterType="String"
		resultType="ItemDTO">
		SELECT *
		FROM ITEM_T
		<where>
			<if test="query != ''">
				ITEM_TITLE LIKE CONCAT ('%',#{query},'%') || ITEM_TITLE LIKE CONCAT
				('%',LOWER(#{query}),'%')
			</if>
		</where>
	</select>

	<!-- 모든 사용자 주문 정보 -->
	<resultMap type="ItemOrderDTO" id="orderResultMap">
		<result property="itemOrderNo" column="ITEM_ORDER_NO" />
		<result property="userNo" column="USER_NO" />
		<result property="orderDate" column="ORDER_DATE" />
		<result property="name" column="NAME" />
		<result property="mobile" column="MOBILE" />
		<result property="postcode" column="POSTCODE" />
		<result property="roadAddress" column="ROAD_ADDRESS" />
		<result property="detailAddress" column="DETAIL_ADDRESS" />
		<result property="orderTotal" column="ORDER_TOTAL" />
		<result property="payMethod" column="PAY_METHOD" />
		<result property="delivery" column="DELIVERY" />
		<result property="imp_uid" column="IMP_UID" />
	</resultMap>


	<select id="orderList" resultType="ItemOrderDTO"
		resultMap="orderResultMap">
		SELECT ITEM_ORDER_NO, USER_NO, ORDER_DATE, NAME, MOBILE, POSTCODE,
		ROAD_ADDRESS, DETAIL_ADDRESS, ORDER_TOTAL, PAY_METHOD, DELIVERY,
		IMP_UID
		FROM ITEM_ORDER_T
		ORDER BY ORDER_DATE DESC;
	</select>


	<!-- 특정 주문 목록 -->
	<select id="orderView" resultType="OrderListDTO">
		SELECT A.ITEM_ORDER_NO, A.USER_NO, A.ORDER_DATE, A.NAME, MOBILE, A.POSTCODE,
		A.ROAD_ADDRESS, A.DETAIL_ADDRESS, A.ORDER_TOTAL, A.PAY_METHOD,
		A.DELIVERY, A.IMP_UID,
		B.ITEM_NO, B.QUANTITY, B.ITEM_TITLE, B.ITEM_PRICE, B.ITEM_MAIN_IMG
		FROM ITEM_ORDER_T A
		INNER JOIN ORDER_DETAIL_T B
		ON A.ITEM_ORDER_NO = B.ITEM_ORDER_NO
		WHERE A.ITEM_ORDER_NO = #{itemOrderNo}
	</select>

	<!-- 배송 상태 -->
	<update id="deliveryStatus" parameterType="Map">
		UPDATE ITEM_ORDER_T
		SET DELIVERY = #{delivery}
		WHERE ITEM_ORDER_NO = #{itemOrderNo}
	</update>

	<!-- 상품 수량 조절 -->
	<update id="UpdateItemStock" parameterType="ItemDTO">
		UPDATE ITEM_T
		SET ITEM_STOCK = ITEM_STOCK - #{itemStock}
		WHERE ITEM_NO = #{itemNo}
	</update>

	<!-- 주문취소 -->
	<update id="orderCancle">
		UPDATE ITEM_ORDER_T
		SET DELIVERY = '주문취소'
		WHERE ITEM_ORDER_NO = #{itemOrderNo}
	</update>

	<!-- 주문 취소 정보 -->
	<insert id="insertOrderCancel" parameterType="OrderCancelDTO">
		INSERT INTO ORDER_CANCEL_T (USER_NO, ITEM_ORDER_NO, ORDER_TOTAL, IMP_UID)
		SELECT USER_NO, ITEM_ORDER_NO, ORDER_TOTAL, IMP_UID
		FROM ITEM_ORDER_T
	</insert>



  
  <!-- 회원 전체 목록 가져오기 -->
<select id="getTotalUserList" parameterType="Map" resultType="UserDTO">
  SELECT USER_NO, ID, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDATE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREECODE, JOINED_AT, PW_MODIFIED_AT 
    FROM USER_T
   <where>
    <if test="query != null and query != '' and query != 'undefined'">
      AND (
        USER_NO LIKE CONCAT('%', #{query}, '%') 
        OR ID LIKE CONCAT('%', #{query}, '%') 
        OR NAME LIKE CONCAT('%', #{query}, '%')
        OR JOINED_AT LIKE CONCAT('%', #{query}, '%')
        OR ROAD_ADDRESS LIKE CONCAT('%', #{query}, '%')
        OR JIBUN_ADDRESS LIKE CONCAT('%', #{query}, '%')
        OR DETAIL_ADDRESS LIKE CONCAT('%', #{query}, '%')
      )
    </if>
    <if test="query == 'undefined'">
      AND (
        USER_NO LIKE CONCAT('%', #{session.query}, '%') 
        OR ID LIKE CONCAT('%', #{session.query}, '%') 
        OR NAME LIKE CONCAT('%', #{session.query}, '%')
        OR JOINED_AT LIKE CONCAT('%', #{session.query}, '%')
        OR ROAD_ADDRESS LIKE CONCAT('%', #{session.query}, '%')
        OR JIBUN_ADDRESS LIKE CONCAT('%', #{session.query}, '%')
        OR DETAIL_ADDRESS LIKE CONCAT('%', #{session.query}, '%')
      )
    </if>
  </where>
   ORDER BY ${column} ${order}
    LIMIT #{begin}, #{recordPerPage}
  </select>
  
  
  <!-- 전체 카운트 중 query값 결과 카운트 조건문 넣어준 쿼리문 -->
  <select id="getUserSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM USER_T
    <where>
      <if test="query != null and query != ''">
        USER_NO LIKE CONCAT('%', #{query}, '%') 
     OR ID LIKE CONCAT('%', #{query}, '%') 
     OR NAME LIKE CONCAT('%', #{query}, '%')
     OR JOINED_AT LIKE CONCAT('%', #{query}, '%')
     OR ROAD_ADDRESS LIKE CONCAT('%', #{query}, '%')
     OR JIBUN_ADDRESS LIKE CONCAT('%', #{query}, '%')
     OR DETAIL_ADDRESS LIKE CONCAT('%', #{query}, '%')
      </if>
    </where>
  </select>
  
  
  <!-- 휴면회원 전체 목록 가져오기 -->
  <select id="getSleepUserList" parameterType="Map" resultType="SleepUserDTO">
  SELECT USER_NO, ID, NAME, GENDER, EMAIL, MOBILE, BIRTHYEAR, BIRTHDATE, POSTCODE, ROAD_ADDRESS, JIBUN_ADDRESS, DETAIL_ADDRESS, EXTRA_ADDRESS, AGREECODE, JOINED_AT, PW_MODIFIED_AT, SLEPT_AT 
    FROM SLEEP_USER_T
   <where>
    <if test="query != null and query != '' and query != 'undefined'">
      AND (
        USER_NO LIKE CONCAT('%', #{query}, '%') 
        OR ID LIKE CONCAT('%', #{query}, '%') 
        OR NAME LIKE CONCAT('%', #{query}, '%')
        OR JOINED_AT LIKE CONCAT('%', #{query}, '%')
        OR ROAD_ADDRESS LIKE CONCAT('%', #{query}, '%')
        OR JIBUN_ADDRESS LIKE CONCAT('%', #{query}, '%')
        OR DETAIL_ADDRESS LIKE CONCAT('%', #{query}, '%')
        OR SLEPT_AT LIKE CONCAT('%', #{query}, '%')
      )
    </if>
    <if test="query == 'undefined'">
      AND (
        USER_NO LIKE CONCAT('%', #{session.query}, '%') 
        OR ID LIKE CONCAT('%', #{session.query}, '%') 
        OR NAME LIKE CONCAT('%', #{session.query}, '%')
        OR JOINED_AT LIKE CONCAT('%', #{session.query}, '%')
        OR ROAD_ADDRESS LIKE CONCAT('%', #{session.query}, '%')
        OR JIBUN_ADDRESS LIKE CONCAT('%', #{session.query}, '%')
        OR DETAIL_ADDRESS LIKE CONCAT('%', #{session.query}, '%')
        OR SLEPT_AT LIKE CONCAT('%', #{session.query}, '%')
      )
    </if>
  </where>
   ORDER BY ${column} ${order}
    LIMIT #{begin}, #{recordPerPage}
  </select>
  
  
  <!-- 휴면회원 전체 카운트 중 query값 결과 카운트 조건문 넣어준 쿼리문 -->
  <select id="getSleepUserSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM SLEEP_USER_T
    <where>
      <if test="query != null and query != ''">
        USER_NO LIKE CONCAT('%', #{query}, '%') 
     OR ID LIKE CONCAT('%', #{query}, '%') 
     OR NAME LIKE CONCAT('%', #{query}, '%')
     OR JOINED_AT LIKE CONCAT('%', #{query}, '%')
     OR ROAD_ADDRESS LIKE CONCAT('%', #{query}, '%')
     OR JIBUN_ADDRESS LIKE CONCAT('%', #{query}, '%')
     OR DETAIL_ADDRESS LIKE CONCAT('%', #{query}, '%')
     OR SLEPT_AT LIKE CONCAT('%', #{query}, '%')
      </if>
    </where>
  </select>
  
  <!-- 탈퇴회원 전체 목록 가져오기 -->
  <select id="getOutUserList" parameterType="Map" resultType="OutUserDTO">
  SELECT OUT_USER_NO,USER_NO, ID,EMAIL, JOINED_AT, OUT_AT 
    FROM OUT_USER_T
   <where>
    <if test="query != null and query != '' and query != 'undefined'">
      AND (
        USER_NO LIKE CONCAT('%', #{query}, '%') 
        OR ID LIKE CONCAT('%', #{query}, '%') 
        OR JOINED_AT LIKE CONCAT('%', #{query}, '%')
        OR EMAIL LIKE CONCAT('%', #{query}, '%')
        OR OUT_AT LIKE CONCAT('%', #{query}, '%')
      )
    </if>
    <if test="query == 'undefined'">
      AND (
        USER_NO LIKE CONCAT('%', #{session.query}, '%') 
        OR ID LIKE CONCAT('%', #{session.query}, '%') 
        OR JOINED_AT LIKE CONCAT('%', #{session.query}, '%')
        OR EMAIL LIKE CONCAT('%', #{session.query}, '%')
        OR OUT_AT LIKE CONCAT('%', #{session.query}, '%')
      )
    </if>
  </where>
   ORDER BY ${column} ${order}
    LIMIT #{begin}, #{recordPerPage}
  </select>
  
  
  <!-- 휴면회원 전체 카운트 중 query값 결과 카운트 조건문 넣어준 쿼리문 -->
  <select id="getOutUserSearchCount" parameterType="Map" resultType="int">
    SELECT COUNT(*)
      FROM OUT_USER_T
    <where>
      <if test="query != null and query != ''">
           USER_NO LIKE CONCAT('%', #{query}, '%') 
        OR ID LIKE CONCAT('%', #{query}, '%') 
        OR JOINED_AT LIKE CONCAT('%', #{query}, '%')
        OR EMAIL LIKE CONCAT('%', #{query}, '%')
        OR OUT_AT LIKE CONCAT('%', #{query}, '%')
      </if>
    </where>
  </select>
</mapper>